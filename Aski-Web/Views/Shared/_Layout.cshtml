
@using Newtonsoft.Json;

<!DOCTYPE html>
<html lang="pt-br">
<head>

    <title>Aski - Plataforma de Monitoria Online</title>

    <meta charset="UTF-8">

    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/materialize/1.0.0/css/materialize.min.css">
    <link rel="stylesheet" href="https://fonts.googleapis.com/icon?family=Material+Icons">
    <link href="https://fonts.googleapis.com/css?family=Nunito:400,600,700" rel="stylesheet">
    <meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no" />
    <link type="text/css" href="~/Content/css/style.css" rel="stylesheet" />


</head>
<body>
    <header>
        <div class="row">
            <img src="~/Content/img/logo-simbolo-branco-vertical.png" class="logo" />
        </div>
    </header>
    <div>
        <div class="row">
            @RenderBody()
        </div>
    </div>
    <script src="~/Scripts/jquery-3.3.1.js" type="text/javascript"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery-validate/1.17.0/jquery.validate.min.js" type="text/javascript"></script>
    <script src="https://code.jquery.com/ui/1.10.3/jquery-ui.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/materialize/1.0.0/js/materialize.min.js"></script>
    <script src="~/Scripts/script.js" type="text/javascript"></script>
    <script src="~/Scripts/scriptforms.js" type="text/javascript"></script>
    <script src="~/Scripts/jquery.easing.1.3.js" type="text/javascript"></script>
    <script>

        $(document).ready(function () {

            var chipsData = {};

            var json = @Html.Raw(JsonConvert.SerializeObject(@Model.User.HasDificultyIn));
            var aux = JSON.stringify(json);
            var disciplines = JSON.parse(aux);

            var disciplinesNames = {};

            var wantBeHelpedData = [];
            var wantToHelpData = [];

            $.each(disciplines, function (index, value) {
                disciplinesNames[index] = value["Name"];
            })

            $.each(disciplinesNames, function (index, value) {
                chipsData[value] = null;               
            })

            $('#chips_want_be_helped').chips({
                placeholder: 'Quero ajuda com',
                autocompleteOptions: {
                    data: chipsData,
                    limit: Infinity,
                    minLength: 1
                },
                onChipAdd(e, chip) {
                    var elem = document.querySelector('.chips');
                    var instance = M.Chips.getInstance(elem);
                    var content = chip.childNodes[0].textContent;
                    wantBeHelpedData.push(content);
                    var dataInserted = instance.chipsData;
                    var data = instance.options.autocompleteOptions.data;

                    var contains = false;

                    $.each(data, function (index, value) {
                        if (index === content)
                            contains = true;
                    });

                    if (!contains) {
                        instance.chipsData.splice(dataInserted.length - 1, dataInserted.length);
                        $(chip).detach();
                    }
                },
                onChipDelete(e, chip) {
                    var elem = document.querySelector('.chips');
                    var instance = M.Chips.getInstance(elem);
                    var content = chip.childNodes[0].textContent;
                    var data = instance.options.autocompleteOptions.data;

                    wantBeHelpedData.splice(wantBeHelpedData.indexOf(content),1);
                }
            });

            $('#chips-want-to-help').chips({
                placeholder: 'Sou bom em',
                autocompleteOptions: {
                    data: chipsData,
                    limit: Infinity,
                    minLength: 1
                },
                onChipAdd(e, chip) {
                    var elem = document.querySelector('.chips');
                    var instance = M.Chips.getInstance(elem);
                    var content = chip.childNodes[0].textContent;
                    wantToHelpData.push(content);
                    var dataInserted = instance.chipsData;
                    var data = instance.options.autocompleteOptions.data;

                    var contains = false;

                    $.each(data, function (index, value) {
                        if (index === content)
                            contains = true;
                    });

                    if (!contains) {
                        instance.chipsData.splice(dataInserted.length - 1, dataInserted.length);
                        $(chip).detach();
                    }
                },
                onChipDelete(e, chip) {
                    var elem = document.querySelector('.chips#chips-want-to-help');
                    var instance = M.Chips.getInstance(elem);
                    var content = chip.childNodes[0].textContent;
                    var data = instance.options.autocompleteOptions.data;

                    wantToHelpData.splice(wantToHelpData.indexOf(content),1);
                }
            });

            $('#saveUser').click(function () {

                var nameUser = $('#name').val();
                var emailUser = $('#email').val();
                var passUser = $('#pass').val();
                var wantBeHelped = $('#cb_1').is(':checked');
                var wantToHelp = $('#cb_2').is(':checked');

                var hasDificultyIn = [];
                var hasDomainIn = [];

                for (var i = 0; i < disciplines.length; i++) {
                    for (var j = 0; j < wantBeHelpedData.length; j++) {
                        if (wantBeHelpedData[j] === disciplines[i].Name)
                            hasDificultyIn.push(disciplines[i].Id);
                    }
                }
                
                for (var i = 0; i < disciplines.length; i++) {
                    for (var j = 0; j < wantToHelpData.length; j++){
                        if (wantToHelpData[j] === disciplines[i].Name)
                            hasDomainIn.push(disciplines[i].Id);
                    }
                }

                var user = {
                    name : nameUser,
                    email : emailUser,
                    password : passUser,
                    wantBeHelped : wantBeHelped,
                    wantToHelp : wantToHelp
                };

                var homeViewModel = {
                    user : user,
                    hasDificultyIn : hasDificultyIn,
                    hasDomainIn : hasDomainIn
                };

                $.ajax({

                    type: "POST",
                    url : "/CadastrarUsuario/SaveUser",
                    data : JSON.stringify(homeViewModel),
                    contentType: "application/json; charset=utf-8",
                    dataType: "json",
                    success : function(){
                        M.toast({ html: "Usuário cadastrado com sucesso" });
                    },
                    failure: function(){
                        M.toast({ html: "Falha ao cadastrar usuário" });
                    },
                    error: function(){
                        M.toast({ html: "Falha ao cadastrar usuário" });
                    }
                });

            })

        })
    </script>
   
</body>

</html>


